# SPDX-License-Identifier: Apache-2.0

name: E2E test

on:
  # REMOVE THE PULL REQUEST TRIGGER BEFORE MERGING
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      pr_or_branch:
        description: 'pull request number or branch name'
        required: true
        default: 'main'

jobs:
  e2e:
    runs-on: ubuntu-gpu
    strategy:
      matrix:
        python:
          - "3.11"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # https://github.com/actions/checkout/issues/249
          fetch-depth: 0
          submodules: 'true'

      - name: Determine if pr_or_branch is a PR number
        id: check_pr
        run: |
          if [[ "${{ github.event.inputs.pr_or_branch }}" =~ ^[0-9]+$ ]]; then
            echo "is_pr=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_pr=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Fetch and checkout PR
        if: steps.check_pr.outputs.is_pr == 'true'
        run: |
          git fetch origin pull/${{ github.event.inputs.pr_or_branch }}/head:pr-${{ github.event.inputs.pr_or_branch }}
          git checkout pr-${{ github.event.inputs.pr_or_branch }}

      - name: Checkout branch
        if: steps.check_pr.outputs.is_pr == 'false'
        run: git checkout ${{ github.event.inputs.pr_or_branch }}

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      # tox creates (and reuses) a separate Python (virtual) environment for each context (fmt, lint, unit)
      # tox requires (and will install, if not exists) all the packages listed in requirements.txt
      # so we want to cache the entire Python environment, not just the pip cache as tox will not reuse that
      # but caching tox environments is fickle and can cause weird errors
      # tox does provide a legacy option to reuse the Python system wide site packages
      # since GH action runners are one-and-done we can install all requirements into the system packages
      # and cache and reuse all of the installed Python system packages
      # tox can then reuse the system site packages with setting `-x testenv:unit.system_site_packages=True`
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          # v2: previous restore key did not depend on requirements.txt and contained 'mlx'
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-v2-${{ hashFiles('requirements-dev.txt') }}
          restore-keys:
            ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-v2-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          CMAKE_ARGS="-DLLAMA_CUBLAS=on" python -m pip install -r requirements-dev.txt

      - name: Run e2e test
        run: |
          tox \
            -x testenv:functional.system_site_packages=True \
            -e py3-e2e
